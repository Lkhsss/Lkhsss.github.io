<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://blog.lkhsss.cn</id>
    <title>LKHSS的Blog • Posts by &#34;go&#34; tag</title>
    <link href="https://blog.lkhsss.cn" />
    <updated>2023-03-04T17:23:36.000Z</updated>
    <category term="汇编" />
    <category term="Go" />
    <category term="学习笔记" />
    <category term="学习目录" />
    <category term="编程" />
    <category term="Hexo" />
    <category term="LaTex" />
    <category term="Html" />
    <category term="Java" />
    <category term="学习" />
    <category term="Python" />
    <category term="Rust" />
    <category term="解决方案" />
    <category term="数据库" />
    <category term="MySQL" />
    <category term="高中" />
    <category term="化学" />
    <category term="内卷笔记" />
    <category term="数学" />
    <category term="公式" />
    <category term="总结" />
    <category term="计算机" />
    <category term="物理" />
    <category term="Linux" />
    <category term="Kali" />
    <category term="WSL" />
    <entry>
        <id>https://blog.lkhsss.cn/%E7%BC%96%E7%A8%8B/Go/go%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95/</id>
        <title>Go语言基础语法</title>
        <link rel="alternate" href="https://blog.lkhsss.cn/%E7%BC%96%E7%A8%8B/Go/go%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95/"/>
        <content type="html">&lt;div class=&#34;note note-success&#34;&gt;
            &lt;p&gt;上文：&lt;strong&gt;&lt;a href=&#34;/%E7%BC%96%E7%A8%8B/Go/go%E8%AF%AD%E8%A8%80%E7%BB%93%E6%9E%84/&#34; title=&#34;Go语言结构&#34;&gt;Go语言结构&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
          &lt;/div&gt;
&lt;h2 id=&#34;行代码&#34;&gt;行代码&lt;/h2&gt;
&lt;p&gt;Go语言的行代码由 &lt;a href=&#34;#%E5%85%B3%E9%94%AE%E5%AD%97&#34;&gt;&lt;span class=&#34;label label-success&#34;&gt;关键字&lt;/span&gt;&lt;/a&gt;，&lt;span class=&#34;label label-success&#34;&gt;标识符&lt;/span&gt;，&lt;span class=&#34;label label-success&#34;&gt;常量&lt;/span&gt;，&lt;span class=&#34;label label-success&#34;&gt;字符串&lt;/span&gt;，&lt;span class=&#34;label label-success&#34;&gt;符号&lt;/span&gt; 等部分组成&lt;/p&gt;
&lt;p&gt;Go语言的行代码末尾不需要加结尾符号（比如C语言中的&lt;code&gt;;&lt;/code&gt;），这些由编译器自动完成。&lt;/p&gt;
&lt;div class=&#34;note note-warning&#34;&gt;
            &lt;p&gt;&lt;strong&gt;当然&lt;/strong&gt;，多个语句写在同一行时，也可以用&lt;code&gt;;&lt;/code&gt;手动将其区分。但是，&lt;span class=&#34;label label-danger&#34;&gt;不推荐&lt;/span&gt;&lt;/p&gt;
          &lt;/div&gt;
&lt;div class=&#34;note note-info&#34;&gt;
            &lt;p&gt;&lt;span class=&#34;label label-danger&#34;&gt;不推荐&lt;/span&gt;写成这样：&lt;/p&gt;&lt;figure&gt;&lt;div class=&#34;code-wrapper&#34;&gt;&lt;pre class=&#34;line-numbers language-go&#34; data-language=&#34;go&#34;&gt;&lt;code class=&#34;language-go&#34;&gt;fmt.Println(&amp;quot;haihaihai&amp;quot;);fmt.Println(&amp;quot;不推荐此用法&amp;quot;)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;&lt;p&gt;&lt;span class=&#34;label label-success&#34;&gt;推荐&lt;/span&gt;写成这样，增加代码的可阅读性：&lt;/p&gt;&lt;figure&gt;&lt;div class=&#34;code-wrapper&#34;&gt;&lt;pre class=&#34;line-numbers language-go&#34; data-language=&#34;go&#34;&gt;&lt;code class=&#34;language-go&#34;&gt;fmt.Println(&amp;quot;haihaihai&amp;quot;)
fmt.Println(&amp;quot;推荐此用法&amp;quot;)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;
          &lt;/div&gt;
&lt;h2 id=&#34;标识符&#34;&gt;标识符&lt;/h2&gt;
&lt;blockquote&gt;&lt;p&gt;标识符是用户编程时使用的名字，用于给变量、常量、函数、语句块等命名，以建立起名称与使用之间的关系。标识符通常由字母和数字以及其它字符构成。&lt;/p&gt;
&lt;footer&gt;&lt;strong&gt;百度百科&lt;/strong&gt;&lt;/footer&gt;&lt;/blockquote&gt;
&lt;p&gt;Go语言的标识符实际上是由 &lt;strong&gt;一个或是多个字母(A~Z和a~z)、数字(0~9)、下划线&lt;code&gt;_&lt;/code&gt;&lt;/strong&gt; 组成的序列，但是第一个字符必须是&lt;strong&gt;字母或下划线&lt;/strong&gt;而不能是数字或&lt;a href=&#34;#%E5%85%B3%E9%94%AE%E5%AD%97&#34;&gt;关键字&lt;/a&gt;。&lt;/p&gt;
&lt;h2 id=&#34;字符串&#34;&gt;字符串&lt;/h2&gt;
&lt;p&gt;和其他语言相同，但是Go语言字符串的特性是可以用&lt;code&gt;+&lt;/code&gt;将两端字符串直接拼接在一起。&lt;/p&gt;
&lt;div class=&#34;note note-info&#34;&gt;
            &lt;p&gt;首尾相连，就像这样：&lt;/p&gt;&lt;figure&gt;&lt;div class=&#34;code-wrapper&#34;&gt;&lt;pre class=&#34;line-numbers language-go&#34; data-language=&#34;go&#34;&gt;&lt;code class=&#34;language-go&#34;&gt;fmt.Println(&amp;quot;Hello&amp;quot; + &amp;quot;World&amp;quot;)	&amp;#x2F;&amp;#x2F;此行将输出HelloWorld
fmt.Println(&amp;quot;HelloWorld&amp;quot;)			&amp;#x2F;&amp;#x2F;此行也将输出HelloWorld&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;
          &lt;/div&gt;
&lt;div class=&#34;note note-success&#34;&gt;
            &lt;p&gt;&lt;s&gt;怎么感觉又把Python基础学了一遍（小声BB&lt;/s&gt;&lt;/p&gt;
          &lt;/div&gt;
&lt;h2 id=&#34;关键字&#34;&gt;关键字&lt;/h2&gt;
&lt;p&gt;和其它语言一样，Go也有其独特的保留字。&lt;/p&gt;
&lt;div class=&#34;note note-danger&#34;&gt;
            &lt;p&gt;未填写是因为还未学习 ( qwq )&lt;/p&gt;
          &lt;/div&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:center&#34;&gt;保留字&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;作用&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;保留字&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;作用&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;package&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;定义包名&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;default&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;func&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;定义函数&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;interface&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;import&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;引入包&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;break&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;var&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;定义变量&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;case&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;defer&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;go&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;struct&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;map&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;else&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;chan&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;switch&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;goto&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;fallthrough&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;if&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;range&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;type&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;continue&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;return&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;for&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;select&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;const&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
</content>
        <category term="Go" />
        <category term="学习笔记" />
        <category term="编程" />
        <updated>2023-03-04T17:23:36.000Z</updated>
    </entry>
    <entry>
        <id>https://blog.lkhsss.cn/%E7%BC%96%E7%A8%8B/Go/go%E8%AF%AD%E8%A8%80%E7%BB%93%E6%9E%84/</id>
        <title>Go语言结构</title>
        <link rel="alternate" href="https://blog.lkhsss.cn/%E7%BC%96%E7%A8%8B/Go/go%E8%AF%AD%E8%A8%80%E7%BB%93%E6%9E%84/"/>
        <content type="html">&lt;div class=&#34;note note-success&#34;&gt;
            &lt;p&gt;上文：&lt;strong&gt;&lt;a href=&#34;/%E7%BC%96%E7%A8%8B/Go/go-hello-world/&#34; title=&#34;Go: Hello World!&#34;&gt;Go: Hello World!&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
          &lt;/div&gt;
&lt;h2 id=&#34;语言结构&#34;&gt;语言结构&lt;/h2&gt;
&lt;p&gt;Go的语言结构分为&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#%E5%8C%85%E5%A3%B0%E6%98%8E&#34;&gt;包声明&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E5%BC%95%E5%85%A5%E5%8C%85&#34;&gt;引入包&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E5%87%BD%E6%95%B0&#34;&gt;函数&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E5%8F%98%E9%87%8F&#34;&gt;变量&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E8%AF%AD%E5%8F%A5&#34;&gt;语句&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E6%B3%A8%E9%87%8A&#34;&gt;注释&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;既然是学习语言结构，那么还是用最简单的&lt;a href=&#34;/%E7%BC%96%E7%A8%8B/Go/go-hello-world/&#34; title=&#34;Go: Hello World!&#34;&gt;HelloWorld&lt;/a&gt;演示好了&lt;/p&gt;
&lt;figure&gt;&lt;div class=&#34;code-wrapper&#34;&gt;&lt;pre class=&#34;line-numbers language-go&#34; data-language=&#34;go&#34;&gt;&lt;code class=&#34;language-go&#34;&gt;package main &amp;#x2F;* 包声明 *&amp;#x2F;

import &amp;quot;fmt&amp;quot; &amp;#x2F;* 引入包 *&amp;#x2F;

func main() &amp;#123;
   &amp;#x2F;* 这是我的第一个简单的程序 *&amp;#x2F;
   fmt.Println(&amp;quot;Hello, World!&amp;quot;)&amp;#x2F;&amp;#x2F;基本的输出语句，将自动换行
   &amp;#x2F;&amp;#x2F;这是一条单行注释
   &amp;#x2F;* 这是
   一条
   多行
   注释
   *&amp;#x2F;
&amp;#125;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;
&lt;h3 id=&#34;包声明&#34;&gt;包声明&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;package main&lt;/code&gt;定义了包名。一个Go程序必须在源文件中非注释的第一行指明这个文件属于哪个包。&lt;/p&gt;
&lt;div class=&#34;note note-warning&#34;&gt;
            &lt;p&gt;package main表示一个可独立执行的程序，&lt;strong&gt;每个 Go 应用程序都包含一个名为 &lt;code&gt;main&lt;/code&gt; 的包&lt;/strong&gt;。&lt;/p&gt;
          &lt;/div&gt;
&lt;div class=&#34;note note-warning&#34;&gt;
            &lt;p&gt;注意：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;文件名与包名没有直接关系，不一定要将文件名与包名定成同一个&lt;/li&gt;&lt;li&gt;文件夹名与包名没有直接关系，并非需要一致&lt;/li&gt;&lt;li&gt;同一个文件夹下的文件只能有一个包名，否则编译报错。&lt;span class=&#34;label label-danger&#34;&gt;package command-line-arguments is not a main package&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;
          &lt;/div&gt;
&lt;h3 id=&#34;引入包&#34;&gt;引入包&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;import &amp;quot;fmt&amp;quot;&lt;/code&gt; 告诉 Go 编译器这个程序需要使用 &lt;code&gt;fmt&lt;/code&gt; 包（的函数，或其他元素），&lt;code&gt;fmt&lt;/code&gt; 包实现了基本的格式化 I/O（输入/输出）&lt;/p&gt;
&lt;div class=&#34;note note-success&#34;&gt;
            &lt;p&gt;约等于Python中的&lt;code&gt;print()&lt;/code&gt;函数&lt;/p&gt;
          &lt;/div&gt;
&lt;h3 id=&#34;函数&#34;&gt;函数&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;func&lt;/code&gt;是Go语言定义函数的方法。&lt;/p&gt;
&lt;div class=&#34;note note-success&#34;&gt;
            &lt;p&gt;约等于Python中的&lt;code&gt;def main():&lt;/code&gt;&lt;/p&gt;
          &lt;/div&gt;
&lt;p&gt;&lt;code&gt;func main()&lt;/code&gt; 是程序开始执行的函数。&lt;code&gt;main()&lt;/code&gt; 函数是每一个可执行程序所必须包含的，一般来说都是在启动后第一个执行的函数&lt;/p&gt;
&lt;div class=&#34;note note-info&#34;&gt;
            &lt;p&gt;如果有 &lt;code&gt;init()&lt;/code&gt; 函数则会先执行该函数。&lt;/p&gt;
          &lt;/div&gt;
&lt;h3 id=&#34;变量&#34;&gt;变量&lt;/h3&gt;
&lt;p&gt;与其他语言相通&lt;/p&gt;
&lt;div class=&#34;note note-danger&#34;&gt;
            &lt;p&gt;但需要注意的是：当标识符（包括常量、变量、类型、函数名、结构字段等等）以一个大写字母开头，如：Group1，那么使用这种形式的标识符的对象就可以被外部包的代码所使用（客户端程序需要先导入这个包），这被称为导出（像面向对象语言中的 public）；标识符如果以小写字母开头，则对包外是不可见的，但是他们在整个包的内部是可见并且可用的（像面向对象语言中的 protected ）。&lt;/p&gt;
          &lt;/div&gt;
&lt;h3 id=&#34;语句&#34;&gt;语句&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;fmt.Println()&lt;/code&gt; 可以将字符串输出到控制台，并在最后自动增加换行字符 \n。&lt;br&gt;
使用 &lt;code&gt;fmt.Print(&amp;quot;hello, world\n&amp;quot;)&lt;/code&gt; 可以得到相同的结果。&lt;br&gt;
&lt;code&gt;Print&lt;/code&gt; 和 &lt;code&gt;Println&lt;/code&gt; 这两个函数也支持使用变量，如：&lt;code&gt;fmt.Println(arr)&lt;/code&gt; 。如果没有特别指定，它们会以默认的打印格式将变量 &lt;code&gt;arr&lt;/code&gt; 输出到控制台。&lt;/p&gt;
&lt;h3 id=&#34;注释&#34;&gt;注释&lt;/h3&gt;
&lt;p&gt;使用以 &lt;code&gt;//&lt;/code&gt; 开头的单行注释，而&lt;code&gt;/*...*/&lt;/code&gt; 是多行注释，这点与C和C艹是相似的。&lt;/p&gt;
</content>
        <category term="Go" />
        <category term="学习笔记" />
        <category term="编程" />
        <updated>2023-02-19T08:38:27.000Z</updated>
    </entry>
    <entry>
        <id>https://blog.lkhsss.cn/%E7%BC%96%E7%A8%8B/Go/go-hello-world/</id>
        <title>Go: Hello World!</title>
        <link rel="alternate" href="https://blog.lkhsss.cn/%E7%BC%96%E7%A8%8B/Go/go-hello-world/"/>
        <content type="html">&lt;h2 id=&#34;Go语言环境搭建&#34;&gt;Go语言环境搭建&lt;/h2&gt;
&lt;p&gt;官方下载地址：&lt;a href=&#34;https://golang.org/dl/&#34;&gt;https://golang.org/dl/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;镜像站：&lt;a href=&#34;https://golang.google.cn/dl/&#34;&gt;https://golang.google.cn/dl/&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;Hello-World&#34;&gt;Hello World!&lt;/h2&gt;
&lt;p&gt;学习一门语言的第一步，那必定是去copy一份经典的HelloWorld啦 :)&lt;/p&gt;
&lt;figure&gt;&lt;div class=&#34;code-wrapper&#34;&gt;&lt;pre class=&#34;line-numbers language-go&#34; data-language=&#34;go&#34;&gt;&lt;code class=&#34;language-go&#34;&gt;package main

import &amp;quot;fmt&amp;quot;

func main() &amp;#123;
   &amp;#x2F;* 这是我的第一个简单的程序 *&amp;#x2F;
   fmt.Println(&amp;quot;Hello, World!&amp;quot;)
&amp;#125;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;
&lt;p&gt;随便创建一个文件，修改后缀为&lt;code&gt;.go&lt;/code&gt;，直接把上面的代码copy进去。&lt;/p&gt;
&lt;p&gt;作为第一个程序，我理所当然地取名为&lt;code&gt;helloworld.go&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;保存后直接一顿操作在&lt;strong&gt;当前目录&lt;/strong&gt;打开终端，输入：&lt;/p&gt;
&lt;figure&gt;&lt;div class=&#34;code-wrapper&#34;&gt;&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;go run test.go&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;
&lt;p&gt;如果成功的话，会输出：&lt;/p&gt;
&lt;span class=&#34;label label-success&#34;&gt;成功&lt;/span&gt;
&lt;figure&gt;&lt;div class=&#34;code-wrapper&#34;&gt;&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;D:\Go&amp;gt;go run test.go
Hello, World!&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;
&lt;div class=&#34;note note-info&#34;&gt;
            &lt;p&gt;&lt;span class=&#34;label label-danger&#34;&gt;失败&lt;/span&gt;&lt;/p&gt;&lt;p&gt;如果显示&lt;code&gt;&#39;go&#39;不是内部或外部命令，也不是可运行的程序或批处理文件。&lt;/code&gt;，那应当为Go语言添加系统环境，或这重新安装。&lt;/p&gt;
          &lt;/div&gt;
</content>
        <category term="Go" />
        <category term="学习笔记" />
        <updated>2023-02-19T08:17:10.000Z</updated>
    </entry>
    <entry>
        <id>https://blog.lkhsss.cn/%E7%BC%96%E7%A8%8B/Go/go%E5%AD%A6%E4%B9%A0%E7%9B%AE%E5%BD%95/</id>
        <title>Go学习目录</title>
        <link rel="alternate" href="https://blog.lkhsss.cn/%E7%BC%96%E7%A8%8B/Go/go%E5%AD%A6%E4%B9%A0%E7%9B%AE%E5%BD%95/"/>
        <content type="html">&lt;ul&gt;
&lt;li&gt;
&lt;a href=&#34;/%E7%BC%96%E7%A8%8B/Go/go-hello-world/&#34; title=&#34;Go: Hello World!&#34;&gt;Go: Hello World!&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;/%E7%BC%96%E7%A8%8B/Go/go%E8%AF%AD%E8%A8%80%E7%BB%93%E6%9E%84/&#34; title=&#34;Go语言结构&#34;&gt;Go语言结构&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;/%E7%BC%96%E7%A8%8B/Go/go%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95/&#34; title=&#34;Go语言基础语法&#34;&gt;Go语言基础语法&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
        <category term="Go" />
        <category term="学习目录" />
        <updated>2023-02-18T04:04:27.000Z</updated>
    </entry>
</feed>
