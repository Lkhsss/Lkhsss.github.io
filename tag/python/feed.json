{
    "version": "https://jsonfeed.org/version/1",
    "title": "LKH的网站 • All posts by \"python\" tag",
    "description": "一个年轻程序猿的主页，包含了很多东西......",
    "home_page_url": "https://lkhsss.github.io",
    "items": [
        {
            "id": "https://lkhsss.github.io/%E7%BC%96%E7%A8%8B/Python/python%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/",
            "url": "https://lkhsss.github.io/%E7%BC%96%E7%A8%8B/Python/python%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/",
            "title": "Python环境搭建",
            "date_published": "2023-03-05T04:55:12.000Z",
            "content_html": "<h1>啥是Python?</h1>\n<blockquote><p>Python由<a href=\"https://baike.baidu.com/item/%E8%8D%B7%E5%85%B0/190469?fromModule=lemma_inlink\">荷兰</a><a href=\"https://baike.baidu.com/item/%E6%95%B0%E5%AD%A6/107037?fromModule=lemma_inlink\">数学</a>和<a href=\"https://baike.baidu.com/item/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/9132?fromModule=lemma_inlink\">计算机科学</a>研究学会的<a href=\"https://baike.baidu.com/item/%E5%90%89%E5%A4%9A%C2%B7%E8%8C%83%E7%BD%97%E8%8B%8F%E5%A7%86/328361?fromModule=lemma_inlink\">吉多·范罗苏姆</a>于1990年代初设计，作为一门叫做<a href=\"https://baike.baidu.com/item/ABC%E8%AF%AD%E8%A8%80/334996?fromModule=lemma_inlink\">ABC语言</a>的替代品。Python提供了高效的高级<a href=\"https://baike.baidu.com/item/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/1450?fromModule=lemma_inlink\">数据结构</a>，还能简单有效地<a href=\"https://baike.baidu.com/item/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/2262089?fromModule=lemma_inlink\">面向对象</a>编程。Python<a href=\"https://baike.baidu.com/item/%E8%AF%AD%E6%B3%95/23734941?fromModule=lemma_inlink\">语法</a>和动态类型，以及<a href=\"https://baike.baidu.com/item/%E8%A7%A3%E9%87%8A%E5%9E%8B%E8%AF%AD%E8%A8%80/8888952?fromModule=lemma_inlink\">解释型语言</a>的本质，使它成为多数平台上写<a href=\"https://baike.baidu.com/item/%E8%84%9A%E6%9C%AC/1697005?fromModule=lemma_inlink\">脚本</a>和快速开发应用的编程语言，随着版本的不断更新和语言新功能的添加，逐渐被用于独立的、<a href=\"https://baike.baidu.com/item/%E5%A4%A7%E5%9E%8B%E9%A1%B9%E7%9B%AE/3986637?fromModule=lemma_inlink\">大型项目</a>的开发。</p>\n<footer><strong>百度百科</strong></footer></blockquote>\n<p>总之是一个对初学者来说很友好的编程语言（盯→_→    汇编）。</p>\n<p>Python在数据处理，网络爬虫，训练AI等方面都很强大，很适合搞大数据和人工智能。</p>\n<hr>\n<h1>安装Python</h1>\n<p>Python的下载主要在官网<a href=\"https://www.python.org/downloads/\"><em>Python</em>.org</a>上</p>\n<div class=\"note note-warning\">\n            <p>由于官网在国外，一般会出现加载下载很慢甚至加载不出来的情况。这个时候只能等待加载或切换网络</p>\n          </div>\n<h2 id=\"版本与选择\">版本与选择</h2>\n<p>Python支持<a href=\"https://www.python.org/downloads/windows/\">Windows</a>，<a href=\"https://www.python.org/downloads/source/\">Linux/UNIX</a>和<a href=\"https://www.python.org/downloads/macos/\">MacOS</a>以及<a href=\"https://www.python.org/download/other/\">其他</a>系统</p>\n<p>Python现在的主要版本为3.x版本，相对于2.0版本有质的提升以及有部分语法修改，建议现在直接学习3.x。</p>\n<div class=\"note note-warning\">\n            <p>建议初学者选定版本后就暂时不要再更换版本。更换版本是可能出现各种奇怪的问题。</p>\n          </div>\n<div class=\"note note-info\">\n            <p>目前的最新版本为<a href=\"https://www.python.org/downloads/release/python-3112/\">3.11.2</a>，是个尝鲜版本（听说运行速度有很大的提升？），但是不稳定。</p><p>建议大家食用3.9或3.10</p>\n          </div>\n<div class=\"note note-warning\">\n            <p>下载时注意选择电脑的位数版本</p><p><code>Windows x86-64 executable installer</code> 为64位版本</p><p><code>Windows x86 executable installer</code> 为32位版本</p><p>不清楚的话就使用64位版本的吧，现在的电脑应该都是64位了。老的电脑应该还是32位。<s>实在不行就都试一遍</s></p>\n          </div>\n<div class=\"note note-danger\">\n            <p>Windows7系统貌似最高只支持3.8 <s>(弔</s> ，建议食用<a href=\"https://www.python.org/downloads/release/python-386/\">3.8.6</a>或<a href=\"https://www.python.org/downloads/release/python-375/\">3.7.5</a></p>\n          </div>\n<h2 id=\"安装\">安装</h2>\n<p>下载好的安装包后是酱紫的（这是我用过的各个版本）</p>\n<p><img src=\"https://cdn.staticaly.com/gh/Lkhsss/picx@main/%E7%BC%96%E7%A8%8B/Python/python%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/python%E5%AE%89%E8%A3%85%E5%8C%85.webp\" alt=\"python安装包\"></p>\n<h3 id=\"双击运行\">双击运行</h3>\n<p>运行出来就是酱紫</p>\n<p><img src=\"https://cdn.staticaly.com/gh/Lkhsss/picx@main/%E7%BC%96%E7%A8%8B/Python/python%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/%E5%8F%8C%E5%87%BB%E8%BF%90%E8%A1%8C%E5%AE%89%E8%A3%85.webp\" alt=\"双击运行安装\"></p>\n<h3 id=\"添加Python到系统环境（重点！）\">添加Python到系统环境（重点！）</h3>\n<div class=\"note note-danger\">\n            <p>除非要安装多个版本的Python，否则一定一定要记得勾选<code>Add python.exe to PATH</code>这个选项！！！！（初学者墙裂推荐）</p><p>会省去很多麻烦！！！</p>\n          </div>\n<p><img src=\"https://cdn.staticaly.com/gh/Lkhsss/picx@main/%E7%BC%96%E7%A8%8B/Python/python%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/%E4%B8%80%E5%AE%9A%E8%A6%81%E5%8B%BE%E9%80%89Add-python.exe-to-PATH-%E9%80%89%E9%A1%B9!.webp\" alt=\"一定要勾选Add-python\"></p>\n<h3 id=\"自定义安装位置\">自定义安装位置</h3>\n<p>选择<code>Customize installation</code>选项</p>\n<p><img src=\"https://cdn.staticaly.com/gh/Lkhsss/picx@main/%E7%BC%96%E7%A8%8B/Python/python%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/%E9%80%89%E6%8B%A9%E8%87%AA%E5%AE%9A%E4%B9%89%E5%AE%89%E8%A3%85.webp\" alt=\"选择自定义安装\"></p>\n<div class=\"note note-warning\">\n            <p>如果此选项为灰色无法点击，则说明已经安装过同一版本或同一大版本的Python（如3.9.2和3.9.5为同一大版本）。</p><p>这时需要抉择你是要使用以前安装的版本还是现在安装的版本。如果使用现在安装的版本，则需要卸载之前安装的版本。</p>\n          </div>\n<p>点击后出现的就是酱紫，选项全选即可。</p>\n<p><img src=\"https://cdn.staticaly.com/gh/Lkhsss/picx@main/%E7%BC%96%E7%A8%8B/Python/python%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/%E7%82%B9%E5%87%BB%E5%90%8E%E5%85%A8%E9%80%89%E5%8D%B3%E5%8F%AF.webp\" alt=\"点击后全选即可\"></p>\n<p>点击Next</p>\n<p><img src=\"https://cdn.staticaly.com/gh/Lkhsss/picx@main/%E7%BC%96%E7%A8%8B/Python/python%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/%E9%85%8D%E7%BD%AE%E5%AE%89%E8%A3%85.webp\" alt=\"配置安装\"></p>\n<p><code>Precompile standard library</code>这个选项可选可不选，选了后在将来打包python程序的时候,速度会更快。<s>（不过我们暂时用不着</s></p>\n<p>点击下面的<code>Browse</code>可以选择安装的位置</p>\n<div class=\"note note-warning\">\n            <p>程序最好不要装在C盘(系统盘)，会拖慢系统运行速度。也不要放在根目录，不方便管理，建议和我一样建个专门的Python文件夹管理不同的版本。</p><p><img src=\"https://cdn.staticaly.com/gh/Lkhsss/picx@main/%E7%BC%96%E7%A8%8B/Python/python%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/%E4%B8%93%E9%97%A8%E5%BB%BA%E7%AB%8B%E4%B8%80%E4%B8%AAPython%E6%96%87%E4%BB%B6%E5%A4%B9%E7%AE%A1%E7%90%86%E7%89%88%E6%9C%AC.webp\" alt=\"专门建立一个Python文件夹管理版本\"></p>\n          </div>\n<h3 id=\"安装-2\">安装</h3>\n<p>点击<code>Install</code>即可开始安装</p>\n<p><img src=\"https://cdn.staticaly.com/gh/Lkhsss/picx@main/%E7%BC%96%E7%A8%8B/Python/python%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/%E5%AE%89%E8%A3%85.webp\" alt=\"安装\"></p>\n<div class=\"note note-success\">\n            <p>安装成功！</p><p><img src=\"https://cdn.staticaly.com/gh/Lkhsss/picx@main/%E7%BC%96%E7%A8%8B/Python/python%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/%E5%AE%89%E8%A3%85%E6%88%90%E5%8A%9F.webp\" alt=\"安装成功\"></p>\n          </div>\n<h2 id=\"验证是否安装成功\">验证是否安装成功</h2>\n<p>在命令行输入<code>python -V</code>可以显示已经安装过的Python的版本信息</p>\n<p><img src=\"https://cdn.staticaly.com/gh/Lkhsss/picx@main/%E7%BC%96%E7%A8%8B/Python/python%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/%E9%AA%8C%E8%AF%81%E5%AE%89%E8%A3%85.webp\" alt=\"验证安装\"></p>\n<hr>\n<h1>安装VScode</h1>\n<p>VSCode（全称：Visual Studio Code）是一款由微软开发且跨平台的免费源代码编辑器，VSCode 开发环境非常简单易用。</p>\n<div class=\"note note-info\">\n            <p>Visual Studio Code其实就是Visual Studio它儿子。相对于Visual Studio的动辄十多个G，VScode轻量，可以做到秒开，并且凭借着强大的插件市场几乎支持所有编程语言。</p>\n          </div>\n<h2 id=\"安装-3\">安装</h2>\n<p>VSCode 安装也很简单，打开官网 <a href=\"https://code.visualstudio.com/\">https://code.visualstudio.com/</a> 下载软件包，一步步安装即可，安装过程注意安装路径设置、环境变量默认自动添加到系统中，勾选以下所有选项：</p>\n<p><a href=\"https://www.runoob.com/wp-content/uploads/2021/08/RM04TZb.png\">勾选以下所有选项</a></p>\n<h2 id=\"安装python插件\">安装python插件</h2>\n<p>安装好后在左侧的插件商店安装python插件<br>\n<img src=\"https://www.runoob.com/wp-content/uploads/2021/08/D256086F-9E7F-4975-9362-3E3DC5A563AB.jpeg\" alt=\"安装python插件\"></p>\n<div class=\"note note-warning\">\n            <p>VScode的功能很多，可以自行百度或摸索</p>\n          </div>",
            "tags": [
                "学习笔记",
                "编程",
                "Python"
            ]
        },
        {
            "id": "https://lkhsss.github.io/%E7%BC%96%E7%A8%8B/Python/%E5%BA%93/python-click%E5%BA%93/",
            "url": "https://lkhsss.github.io/%E7%BC%96%E7%A8%8B/Python/%E5%BA%93/python-click%E5%BA%93/",
            "title": "python-Click库",
            "date_published": "2022-12-10T02:20:24.000Z",
            "content_html": "<h1>Click</h1>\n<p>Click全名<em>Command Line Interface Creation Kit</em>，是一个用于构建命令行的第三方库，相较于Python自带的<a href=\"https://docs.python.org/zh-cn/3/library/argparse.html\">Argparse</a>更加友好和易用。</p>\n<hr>\n<p>官方文档：<a href=\"https://palletsprojects.com/p/click/\">Click | The Pallets Projects</a></p>\n<p>PyPI：<a href=\"https://pypi.org/project/click/\">Click · PyPI</a></p>\n<hr>\n<h2 id=\"安装\">安装</h2>\n<p><code>pip install click</code></p>\n<hr>\n<h2 id=\"用法\">用法</h2>\n<p>引用库<code>import click</code></p>\n<h3 id=\"click-command\">@click.command()</h3>\n<p>使用<code>@click.command()</code>修饰想要构建为命令行命令的函数</p>\n<figure><div class=\"code-wrapper\"><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">&#39;&#39;&#39;\nfilename: test.py\n&#39;&#39;&#39;\nimport click\n\n@click.command()  # 为函数&#96;test()&#96;添加修饰器\ndef test():\n    click.echo(&quot;测试函数，没有什么卵用&quot;)\n\nif __name__ &#x3D;&#x3D; &quot;__main__&quot;:\n    test()</code></pre></div></figure>\n<p>添加后和没有加没有任何不同，因为没有使用<code>@click.option()</code>进行命令行选项的进一步设置</p>\n<p>使用<code>click.echo()</code>是为了更好的终端兼容性</p>\n<h3 id=\"click-option\">@click.option()</h3>\n<p>使用<code>@click.option()</code>增加修饰选项</p>\n<figure><div class=\"code-wrapper\"><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">&#39;&#39;&#39;\nfilename: test.py\n&#39;&#39;&#39;\nimport click\n\n@click.command()  # 为函数&#96;test()&#96;添加修饰器\n@click.option(\n    &quot;-n&quot;,\n    &quot;--name&quot;,\n    prompt&#x3D;&quot;请输入你的名字&quot;,\n    default&#x3D;&quot;无名氏&quot;,\n    help&#x3D;&quot;你的名字。默认值为“无名氏”&quot;,\n    type&#x3D;str,\n) # 设置参数\ndef test(name):\n    click.echo((&quot;你输入的名字为：&#123;&#125;&quot;).format(name)) #输出\n\nif __name__ &#x3D;&#x3D; &quot;__main__&quot;: # 程序入口\n    test()</code></pre></div></figure>\n<figure><div class=\"code-wrapper\"><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">lkhsss@LKH-PC:~$ python test.py -n LKH\n你输入的名字为：LKH\n\nlkhsss@LKH-PC:~$ python test.py\n请输入你的名字 [无名氏]: LKH\n你输入的名字为：LKH</code></pre></div></figure>\n<ul>\n<li>\n<p><code>@click.option()</code>接受一种参数多种名字，上例的<code>-n</code>和<code>--name</code>都指向了一个函数</p>\n</li>\n<li>\n<p>使用<code>prompt</code>指定必须要求输入的参数在没有传入时显示的提示</p>\n<ul>\n<li>\n<blockquote>\n<p>当使用了<code>prompt</code>时，click会认为该参数为必须项，会主动询问参数的值</p>\n</blockquote>\n</li>\n</ul>\n</li>\n<li>\n<p>使用<code>help</code>指定该参数的帮助信息</p>\n</li>\n<li>\n<p>使用<code>type</code>指定传入数据的类型</p>\n<ul>\n<li>使用<code>type=click.Choice['A','B']</code>限制该参数只能从A和B中选择</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"菜单选项\">菜单选项</h3>\n<p>配置好参数后，click自动为我们准备了<code>--help</code>选项，其中包含了我们在<code>help</code>中加入的帮助信息</p>\n<figure><div class=\"code-wrapper\"><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">lkhsss@LKH-PC:~$ python test.py --help\nUsage: test.py [OPTIONS]\n\nOptions:\n  -n, --name TEXT  你的名字。默认值为“无名氏”\n  --help           Show this message and exit.</code></pre></div></figure>\n<hr>\n<h2 id=\"示例\">示例</h2>\n<figure><div class=\"code-wrapper\"><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">&#39;&#39;&#39;\nfilename: test.py\nauthor: Lkhsss\n&#39;&#39;&#39;\nimport click\n\n@click.command()  # 为函数&#96;test()&#96;添加修饰器\n@click.option(\n    &quot;-n&quot;,\n    &quot;--name&quot;,\n    prompt&#x3D;&quot;请输入你的名字&quot;,\n    default&#x3D;&quot;无名氏&quot;,\n    help&#x3D;&quot;你的名字，传入参数后将显示在输出中。默认值为“无名氏”&quot;,\n    type&#x3D;str,\n)\n# 选择可以传入&#96;test()&#96;的参数\n# 可以使用多个参数名，输入&quot;-n&quot;，&quot;--name&quot;都会指向&#96;test()&#96;函数\n# 使用default参数设置参数默认值\n# 使用help参数设置帮助菜单\n@click.option(\n    &quot;-c&quot;,\n    &quot;--count&quot;,\n    prompt&#x3D;&quot;请输入循环次数&quot;,\n    default&#x3D;&quot;1&quot;,\n    help&#x3D;&quot;显示名字次数，默认值为1&quot;,\n    type&#x3D;int\n)\ndef test(name, count):\n    for i in range(count):\n        click.echo((&quot;&#123;&#125;，你好。&quot;).format(name))\n    click.echo(&quot;这是一个示例函数，可以输出你在命令行中输入的名字，用来测试click库&quot;)\n\nif __name__ &#x3D;&#x3D; &quot;__main__&quot;:\n    test()</code></pre></div></figure>\n",
            "tags": [
                "编程",
                "Python"
            ]
        }
    ]
}