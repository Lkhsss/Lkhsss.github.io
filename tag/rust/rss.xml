<?xml version="1.0"?>
<rss version="2.0">
    <channel>
        <title>LKHSS的Blog • Posts by &#34;rust&#34; tag</title>
        <link>https://blog.lkhsss.cn</link>
        <description>嗨嗨嗨</description>
        <language>zh-CN</language>
        <pubDate>Fri, 16 Feb 2024 11:33:38 +0800</pubDate>
        <lastBuildDate>Fri, 16 Feb 2024 11:33:38 +0800</lastBuildDate>
        <category>Go</category>
        <category>学习笔记</category>
        <category>编程</category>
        <category>学习目录</category>
        <category>Html</category>
        <category>Hexo</category>
        <category>LaTex</category>
        <category>Python</category>
        <category>数据库</category>
        <category>MySQL</category>
        <category>解决方案</category>
        <category>Rust</category>
        <category>高中</category>
        <category>化学</category>
        <category>内卷笔记</category>
        <category>数学</category>
        <category>公式</category>
        <category>总结</category>
        <category>计算机</category>
        <category>汇编</category>
        <category>物理</category>
        <category>Linux</category>
        <category>Kali</category>
        <category>树莓派</category>
        <category>WSL</category>
        <item>
            <guid isPermalink="true">https://blog.lkhsss.cn/%E7%BC%96%E7%A8%8B/Rust/rust-%E4%BD%BF%E7%94%A8config%E9%85%8D%E7%BD%AE%E7%A8%8B%E5%BA%8F/</guid>
            <title>Rust-使用config配置程序</title>
            <link>https://blog.lkhsss.cn/%E7%BC%96%E7%A8%8B/Rust/rust-%E4%BD%BF%E7%94%A8config%E9%85%8D%E7%BD%AE%E7%A8%8B%E5%BA%8F/</link>
            <category>编程</category>
            <category>Rust</category>
            <pubDate>Fri, 16 Feb 2024 11:33:38 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;在应用开发中，我们通常会将一些可变项放到配置文件中。&lt;/p&gt;
&lt;p&gt;此次将使用&lt;code&gt;config&lt;/code&gt;来进行配置项的读取。&lt;/p&gt;
&lt;h2 id=&#34;安装依赖项&#34;&gt;安装依赖项&lt;/h2&gt;
&lt;p&gt;config提供api，去一个字段一个字段的读取配置。但是有一种更高级地方法，那就是声明一个struct，然后config帮我们进行反序列化处理，如果字段有错，会直接报错&lt;code&gt;config::ConfigError&lt;/code&gt;。此方法更安全，更rust，代码脉络也更强。、&lt;/p&gt;
&lt;p&gt;因为要反序列化，所以要为struct启用&lt;code&gt;Deserialize&lt;/code&gt;的trait。故而还要引用serde，并启用&lt;code&gt;derive&lt;/code&gt;特性。&lt;/p&gt;
&lt;figure&gt;&lt;div class=&#34;code-wrapper&#34;&gt;&lt;pre class=&#34;line-numbers language-toml&#34; data-language=&#34;toml&#34;&gt;&lt;code class=&#34;language-toml&#34;&gt;[dependencies]
config &amp;#x3D; &amp;quot;0.14.0&amp;quot;
serde &amp;#x3D; &amp;#123; version &amp;#x3D; &amp;quot;1.0.196&amp;quot;, features &amp;#x3D; [&amp;quot;derive&amp;quot;] &amp;#125;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;
&lt;p&gt;或者使用：&lt;/p&gt;
&lt;figure&gt;&lt;div class=&#34;code-wrapper&#34;&gt;&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;cargo add config serde -F serde&amp;#x2F;derive&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;
&lt;h2 id=&#34;声明配置struct&#34;&gt;声明配置struct&lt;/h2&gt;
&lt;p&gt;此处的结构体为一个典型示例&lt;/p&gt;
&lt;p&gt;&lt;code&gt;src/main.rs&lt;/code&gt;&lt;/p&gt;
&lt;figure&gt;&lt;div class=&#34;code-wrapper&#34;&gt;&lt;pre class=&#34;line-numbers language-rust&#34; data-language=&#34;rust&#34;&gt;&lt;code class=&#34;language-rust&#34;&gt;use serde::Deserialize;

#[derive(Debug,Deserialize)]
pub struct AppConfig &amp;#123;
    address: String, &amp;#x2F;&amp;#x2F; 配置项地址
    port: u16, &amp;#x2F;&amp;#x2F; 配置项端口
    server_name: String, &amp;#x2F;&amp;#x2F; 配置项服务器名称
    database_url: String, &amp;#x2F;&amp;#x2F; 配置项数据库URL
    database_port: u16, &amp;#x2F;&amp;#x2F; 配置项数据库端口
    database_user: String, &amp;#x2F;&amp;#x2F; 配置项数据库用户名
    database_password: String, &amp;#x2F;&amp;#x2F; 配置项数据库密码
    debug: bool, &amp;#x2F;&amp;#x2F; 是否启用应用的调试(debug)模式
&amp;#125;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;
&lt;h2 id=&#34;创建配置文件&#34;&gt;创建配置文件&lt;/h2&gt;
&lt;p&gt;在程序根目录下创建一个&lt;code&gt;toml&lt;/code&gt;文件。这里创建一个名为&lt;code&gt;config.toml&lt;/code&gt;的文件。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;config.toml&lt;/code&gt;&lt;/p&gt;
&lt;figure&gt;&lt;div class=&#34;code-wrapper&#34;&gt;&lt;pre class=&#34;line-numbers language-toml&#34; data-language=&#34;toml&#34;&gt;&lt;code class=&#34;language-toml&#34;&gt;# 配置项地址
address&amp;#x3D;&amp;quot;0.0.0.0&amp;quot;
# 配置项端口
port&amp;#x3D;8080 
# 配置项服务器名称
server_name&amp;#x3D; &amp;quot;这是一个config库的demo&amp;quot;

#配置项数据库URL
database_url&amp;#x3D;&amp;quot;0.0.0.0&amp;quot;
# 配置项数据库端口
database_port&amp;#x3D;&amp;quot;7890&amp;quot;
# 配置项数据库用户名
database_user&amp;#x3D;&amp;quot;root&amp;quot;
# 配置项数据库密码
database_password&amp;#x3D;&amp;quot;ABCabc12345678&amp;quot;

# 是否启用应用的调试(debug)模式
debug&amp;#x3D;true &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;
&lt;h2 id=&#34;读取配置文件&#34;&gt;读取配置文件&lt;/h2&gt;
&lt;figure&gt;&lt;div class=&#34;code-wrapper&#34;&gt;&lt;pre class=&#34;line-numbers language-rust&#34; data-language=&#34;rust&#34;&gt;&lt;code class=&#34;language-rust&#34;&gt;use config::&amp;#123;Config, File&amp;#125;;
fn main() &amp;#123;
    let config &amp;#x3D; Config::builder().add_source(File::with_name(&amp;quot;config.toml&amp;quot;)).build().expect(&amp;quot;读取配置文件错误&amp;quot;);;
    let app_config: AppConfig &amp;#x3D; config.try_deserialize().expect(&amp;quot;反序列化失败！&amp;quot;);
    println!(&amp;quot;&amp;#123;:#?&amp;#125;&amp;quot;, app_config); &amp;#x2F;&amp;#x2F; 输出配置信息
&amp;#125;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;
&lt;p&gt;输出如下：&lt;/p&gt;
&lt;figure&gt;&lt;div class=&#34;code-wrapper&#34;&gt;&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;AppConfig &amp;#123;
    address: &amp;quot;0.0.0.0&amp;quot;,
    port: 8080,
    server_name: &amp;quot;这是一个config库的demo&amp;quot;,
    database_url: &amp;quot;0.0.0.0&amp;quot;,
    database_port: 7890,
    database_user: &amp;quot;root&amp;quot;,
    database_password: &amp;quot;ABCabc12345678&amp;quot;,
    debug: true,
&amp;#125;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;
&lt;h2 id=&#34;完整代码&#34;&gt;完整代码&lt;/h2&gt;
&lt;figure&gt;&lt;div class=&#34;code-wrapper&#34;&gt;&lt;pre class=&#34;line-numbers language-none&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;├─src
│  └─main.rs
└─config.toml&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;src/main.rs&lt;/code&gt;&lt;/p&gt;
&lt;figure&gt;&lt;div class=&#34;code-wrapper&#34;&gt;&lt;pre class=&#34;line-numbers language-rust&#34; data-language=&#34;rust&#34;&gt;&lt;code class=&#34;language-rust&#34;&gt;use config::&amp;#123;Config, File&amp;#125;;
use serde::Deserialize;

#[derive(Debug,Deserialize)]
pub struct AppConfig &amp;#123;
    address: String, &amp;#x2F;&amp;#x2F; 配置项地址
    port: u16, &amp;#x2F;&amp;#x2F; 配置项端口
    server_name: String, &amp;#x2F;&amp;#x2F; 配置项服务器名称
    database_url: String, &amp;#x2F;&amp;#x2F; 配置项数据库URL
    database_port: u16, &amp;#x2F;&amp;#x2F; 配置项数据库端口
    database_user: String, &amp;#x2F;&amp;#x2F; 配置项数据库用户名
    database_password: String, &amp;#x2F;&amp;#x2F; 配置项数据库密码
    debug: bool, &amp;#x2F;&amp;#x2F; 是否启用应用的调试(debug)模式
&amp;#125;
fn main() &amp;#123;
    let config &amp;#x3D; Config::builder().add_source(File::with_name(&amp;quot;config.toml&amp;quot;)).build().expect(&amp;quot;读取配置文件错误&amp;quot;);
    let app_config: AppConfig &amp;#x3D; config.try_deserialize().expect(&amp;quot;反序列化失败！&amp;quot;);
    println!(&amp;quot;&amp;#123;:#?&amp;#125;&amp;quot;, app_config); &amp;#x2F;&amp;#x2F; 输出配置信息
&amp;#125;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;config.toml&lt;/code&gt;&lt;/p&gt;
&lt;figure&gt;&lt;div class=&#34;code-wrapper&#34;&gt;&lt;pre class=&#34;line-numbers language-toml&#34; data-language=&#34;toml&#34;&gt;&lt;code class=&#34;language-toml&#34;&gt;# 配置项地址
address&amp;#x3D;&amp;quot;0.0.0.0&amp;quot;
# 配置项端口
port&amp;#x3D;8080 
# 配置项服务器名称
server_name&amp;#x3D; &amp;quot;这是一个config库的demo&amp;quot;

#配置项数据库URL
database_url&amp;#x3D;&amp;quot;0.0.0.0&amp;quot;
# 配置项数据库端口
database_port&amp;#x3D;&amp;quot;7890&amp;quot;
# 配置项数据库用户名
database_user&amp;#x3D;&amp;quot;root&amp;quot;
# 配置项数据库密码
database_password&amp;#x3D;&amp;quot;ABCabc12345678&amp;quot;

# 是否启用应用的调试(debug)模式
debug&amp;#x3D;true &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://blog.lkhsss.cn/%E7%BC%96%E7%A8%8B/Rust/rustup%E6%8D%A2%E6%BA%90/</guid>
            <title>Rustup换源</title>
            <link>https://blog.lkhsss.cn/%E7%BC%96%E7%A8%8B/Rust/rustup%E6%8D%A2%E6%BA%90/</link>
            <category>编程</category>
            <category>解决方案</category>
            <category>Rust</category>
            <pubDate>Tue, 15 Aug 2023 11:23:36 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;由于rust的官方服务器在中国访问很慢，所以在安装和更新的时候经常出现下载时卡住的情况。&lt;br&gt;
这时应换源处理。&lt;/p&gt;
&lt;h2 id=&#34;换源&#34;&gt;换源&lt;/h2&gt;
&lt;h3 id=&#34;1-添加临时环境变量&#34;&gt;1.添加临时环境变量&lt;/h3&gt;
&lt;h4 id=&#34;Windows&#34;&gt;Windows&lt;/h4&gt;
&lt;h5 id=&#34;中科大镜像&#34;&gt;中科大镜像&lt;/h5&gt;
&lt;figure&gt;&lt;div class=&#34;code-wrapper&#34;&gt;&lt;pre class=&#34;line-numbers language-powershell&#34; data-language=&#34;powershell&#34;&gt;&lt;code class=&#34;language-powershell&#34;&gt;$ENV:RUSTUP_DIST_SERVER&amp;#x3D;&amp;#39;https:&amp;#x2F;&amp;#x2F;mirrors.ustc.edu.cn&amp;#x2F;rust-static&amp;#39;
$ENV:RUSTUP_UPDATE_ROOT&amp;#x3D;&amp;#39;https:&amp;#x2F;&amp;#x2F;mirrors.ustc.edu.cn&amp;#x2F;rust-static&amp;#x2F;rustup&amp;#39;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;
&lt;figure&gt;&lt;div class=&#34;code-wrapper&#34;&gt;&lt;pre class=&#34;line-numbers language-cmd&#34; data-language=&#34;cmd&#34;&gt;&lt;code class=&#34;language-cmd&#34;&gt;set RUSTUP_DIST_SERVER&amp;#x3D;https:&amp;#x2F;&amp;#x2F;mirrors.ustc.edu.cn&amp;#x2F;rust-static
set RUSTUP_UPDATE_ROOT&amp;#x3D;https:&amp;#x2F;&amp;#x2F;mirrors.ustc.edu.cn&amp;#x2F;rust-static&amp;#x2F;rustup&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;
&lt;h5 id=&#34;字节跳动镜像&#34;&gt;字节跳动镜像&lt;/h5&gt;
&lt;figure&gt;&lt;div class=&#34;code-wrapper&#34;&gt;&lt;pre class=&#34;line-numbers language-powershell&#34; data-language=&#34;powershell&#34;&gt;&lt;code class=&#34;language-powershell&#34;&gt;$ENV:RUSTUP_DIST_SERVER&amp;#x3D;&amp;#39;https:&amp;#x2F;&amp;#x2F;rsproxy.cn&amp;#39;
$ENV:RUSTUP_UPDATE_ROOT&amp;#x3D;&amp;#39;https:&amp;#x2F;&amp;#x2F;rsproxy.cn&amp;#x2F;rustup&amp;#39;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;
&lt;figure&gt;&lt;div class=&#34;code-wrapper&#34;&gt;&lt;pre class=&#34;line-numbers language-cmd&#34; data-language=&#34;cmd&#34;&gt;&lt;code class=&#34;language-cmd&#34;&gt;set RUSTUP_DIST_SERVER&amp;#x3D;https:&amp;#x2F;&amp;#x2F;rsproxy.cn
set RUSTUP_UPDATE_ROOT&amp;#x3D;https:&amp;#x2F;&amp;#x2F;rsproxy.cn&amp;#x2F;rustup&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;
&lt;h4 id=&#34;Linux&#34;&gt;Linux&lt;/h4&gt;
&lt;h5 id=&#34;中科大镜像-2&#34;&gt;中科大镜像&lt;/h5&gt;
&lt;figure&gt;&lt;div class=&#34;code-wrapper&#34;&gt;&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;export RUSTUP_DIST_SERVER&amp;#x3D;https:&amp;#x2F;&amp;#x2F;mirrors.ustc.edu.cn&amp;#x2F;rust-static
export RUSTUP_UPDATE_ROOT&amp;#x3D;https:&amp;#x2F;&amp;#x2F;mirrors.ustc.edu.cn&amp;#x2F;rust-static&amp;#x2F;rustup&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;
&lt;h5 id=&#34;字节跳动镜像-2&#34;&gt;字节跳动镜像&lt;/h5&gt;
&lt;figure&gt;&lt;div class=&#34;code-wrapper&#34;&gt;&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;export RUSTUP_DIST_SERVER&amp;#x3D;https:&amp;#x2F;&amp;#x2F;rsproxy.cn
export RUSTUP_UPDATE_ROOT&amp;#x3D;https:&amp;#x2F;&amp;#x2F;rsproxy.cn&amp;#x2F;rustup&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;
&lt;p&gt;这两行代码将会把rust的下载和更新源更改为中科大和字节跳动的镜像服务器&lt;/p&gt;
&lt;h3 id=&#34;2-正常安装或更新Rust&#34;&gt;2.正常安装或更新Rust&lt;/h3&gt;
&lt;p&gt;不关闭刚刚打开的命令行，将工作目录定位到rust安装包的位置。&lt;/p&gt;
&lt;p&gt;运行：&lt;/p&gt;
&lt;figure&gt;&lt;div class=&#34;code-wrapper&#34;&gt;&lt;pre class=&#34;line-numbers language-powershell&#34; data-language=&#34;powershell&#34;&gt;&lt;code class=&#34;language-powershell&#34;&gt;.\rustup-init.exe&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;
&lt;p&gt;或者更新&lt;/p&gt;
&lt;figure&gt;&lt;div class=&#34;code-wrapper&#34;&gt;&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;rustup update&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;
 ]]></description>
        </item>
    </channel>
</rss>
