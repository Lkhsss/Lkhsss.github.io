{
    "version": "https://jsonfeed.org/version/1",
    "title": "LKH的网站 • All posts by \"java\" category",
    "description": "一个年轻程序猿的主页，包含了很多东西......",
    "home_page_url": "https://lkhsss.github.io",
    "items": [
        {
            "id": "https://lkhsss.github.io/2022/12/13/Java-Java%E5%85%A5%E9%97%A8/",
            "url": "https://lkhsss.github.io/2022/12/13/Java-Java%E5%85%A5%E9%97%A8/",
            "title": "Java入门",
            "date_published": "2022-12-12T16:32:49.000Z",
            "content_html": "<h1 id=\"万事开头难，先写一个-HelloWorld\"><a href=\"#万事开头难，先写一个-HelloWorld\" class=\"headerlink\" title=\"万事开头难，先写一个 HelloWorld\"></a>万事开头难，先写一个 HelloWorld</h1><p>从网上 copy 了一个最简单的 java 程序下来，体会 java 的基础语法</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">HelloWorld</span> &#123;<br>    <span class=\"hljs-comment\">/* 第一个Java程序</span><br><span class=\"hljs-comment\">     * 它将输出字符串 Hello World</span><br><span class=\"hljs-comment\">     */</span><br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">main</span><span class=\"hljs-params\">(String[] args)</span> &#123;<br>        System.out.println(<span class=\"hljs-string\">&quot;Hello World&quot;</span>); <span class=\"hljs-comment\">// 输出 Hello World</span><br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<hr>\n<h2 id=\"运行步骤\"><a href=\"#运行步骤\" class=\"headerlink\" title=\"运行步骤\"></a>运行步骤</h2><ul>\n<li>保存为文件**<code>HelloWorld.java</code>**</li>\n</ul>\n<blockquote>\n<p>注意，文件名一定要是<code>HelloWorld.java</code>! 不然会有奇怪的事情发生哦（<a href=\"#public%E7%B1%BB\">Why?</a>）</p>\n</blockquote>\n<ul>\n<li><p>在<strong>该文件目录下</strong>分别运行<code>javac HelloWorld.java</code>和<code>java HelloWorld</code>进行编译和运行</p>\n</li>\n<li><p>也可以直接输入<code>java HelloWorld.java</code>进行运行（Java 11 新增功能，单个文件直接运行）</p>\n</li>\n</ul>\n<h2 id=\"完整输出过程\"><a href=\"#完整输出过程\" class=\"headerlink\" title=\"完整输出过程\"></a>完整输出过程</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">lkhsss@LKH-PC:/mnt/d/Java$ javac HelloWorld.java<br>lkhsss@LKH-PC:/mnt/d/Java$ java HelloWorld<br>Hello World<br></code></pre></td></tr></table></figure>\n\n<p>或者直接</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">lkhsss@LKH-PC:/mnt/d/Java$ java HelloWorld.java<br>Hello World<br></code></pre></td></tr></table></figure>\n\n<hr>\n<h1 id=\"语法解析\"><a href=\"#语法解析\" class=\"headerlink\" title=\"语法解析\"></a>语法解析</h1><h2 id=\"类\"><a href=\"#类\" class=\"headerlink\" title=\"类\"></a>类</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">HelloWorld</span> &#123;&#125;<br></code></pre></td></tr></table></figure>\n\n<p>这玩意儿叫做 java 的类(class)。其中<code>public</code>表示这个类公开，而<code>HelloWorld</code>则为这个类的类名。</p>\n<h3 id=\"public-类\"><a href=\"#public-类\" class=\"headerlink\" title=\"public 类\"></a>public 类</h3><p>在 java 程序当中，可以同时出现很多个类，但有且仅有一个类是<code>public</code>并且这个<code>public</code>类的名字<strong>必须和文件名相同</strong>。</p>\n<p>因为每一个 java 程序运行的时候都会先执行 public 这个类（类似于 Python 中的<code>__init__</code>）。</p>\n<h3 id=\"多个类\"><a href=\"#多个类\" class=\"headerlink\" title=\"多个类\"></a>多个类</h3><p>也可以多个类，然后相互调用</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">HelloWorld</span> &#123;<br>    <span class=\"hljs-comment\">/* 第一个Java程序</span><br><span class=\"hljs-comment\">     * 它将输出字符串 Hello World</span><br><span class=\"hljs-comment\">     */</span><br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">main</span><span class=\"hljs-params\">(String[] args)</span> &#123;<br>        System.out.println(<span class=\"hljs-string\">&quot;Hello World&quot;</span>); <span class=\"hljs-comment\">// 输出 Hello World</span><br>        about a=<span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">about</span>(); <span class=\"hljs-comment\">//创建一个about类</span><br>        a.sayabout(); <span class=\"hljs-comment\">//调用about类中的sayabout()方法</span><br><br>    &#125;<br>&#125;<br><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">about</span> &#123;<br>    <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">sayabout</span><span class=\"hljs-params\">()</span> &#123;<br>        System.out.println(<span class=\"hljs-string\">&quot;现在我正在学习java&quot;</span>);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<p>输出：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">lkhsss@LKH-PC:/mnt/d/Java$ java HelloWorld.java<br>Hello World<br>现在我正在学习java<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"方法\"><a href=\"#方法\" class=\"headerlink\" title=\"方法\"></a>方法</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">main</span><span class=\"hljs-params\">(String[] args)</span> &#123;&#125;<br></code></pre></td></tr></table></figure>\n\n<p>这个玩意儿叫做 java 的方法。</p>\n<p>类似于其他编程语言的<strong>函数</strong>。</p>\n<p>将一段可重复运行的代码绑在一起调用，简化代码，提高代码的可读性，可维护性，可重用性，安全性。</p>\n<h3 id=\"修饰符\"><a href=\"#修饰符\" class=\"headerlink\" title=\"修饰符\"></a>修饰符</h3><p>java 方法的首个属性就是<strong>访问修饰符</strong>。</p>\n<p>访问修饰符分为 公有的(public)，默认的(default)，私有的(private)，受保护的(protected) 和 私有的(private)。</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">修饰符</th>\n<th align=\"center\">区别</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">public</td>\n<td align=\"center\">可以被所有其他类所访问</td>\n</tr>\n<tr>\n<td align=\"center\">default</td>\n<td align=\"center\">同一包中的类可以访问，声明时没有加修饰符</td>\n</tr>\n<tr>\n<td align=\"center\">protected</td>\n<td align=\"center\">自身，子类及同一个包中类可以访问。</td>\n</tr>\n<tr>\n<td align=\"center\">private</td>\n<td align=\"center\">只能被自己访问和修改</td>\n</tr>\n</tbody></table>\n<h2 id=\"输出\"><a href=\"#输出\" class=\"headerlink\" title=\"输出\"></a>输出</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\">System.out.println(<span class=\"hljs-string\">&quot;Hello World&quot;</span>);<br></code></pre></td></tr></table></figure>\n\n<p>只是输出一个 Hello World 而已</p>\n",
            "tags": [
                "编程",
                "Java",
                "学习"
            ]
        }
    ]
}