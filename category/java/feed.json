{
    "version": "https://jsonfeed.org/version/1",
    "title": "LKHSS的Blog • All posts by \"java\" category",
    "description": "嗨嗨嗨",
    "home_page_url": "https://blog.lkhsss.cn",
    "items": [
        {
            "id": "https://blog.lkhsss.cn/%E7%BC%96%E7%A8%8B/Java/java%E5%85%A5%E9%97%A8/",
            "url": "https://blog.lkhsss.cn/%E7%BC%96%E7%A8%8B/Java/java%E5%85%A5%E9%97%A8/",
            "title": "Java入门",
            "date_published": "2022-12-12T16:32:49.000Z",
            "content_html": "<h1>万事开头难，先写一个 HelloWorld</h1>\n<p>从网上 copy 了一个最简单的 java 程序下来，体会 java 的基础语法</p>\n<figure><div class=\"code-wrapper\"><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">public class HelloWorld &#123;\n    &#x2F;* 第一个Java程序\n     * 它将输出字符串 Hello World\n     *&#x2F;\n    public static void main(String[] args) &#123;\n        System.out.println(&quot;Hello World&quot;); &#x2F;&#x2F; 输出 Hello World\n    &#125;\n&#125;</code></pre></div></figure>\n<hr>\n<h2 id=\"运行步骤\">运行步骤</h2>\n<ul>\n<li>保存为文件**<code>HelloWorld.java</code>**</li>\n</ul>\n<blockquote>\n<p>注意，文件名一定要是<code>HelloWorld.java</code>! 不然会有奇怪的事情发生哦（<a href=\"#public%E7%B1%BB\">Why?</a>）</p>\n</blockquote>\n<ul>\n<li>\n<p>在<strong>该文件目录下</strong>分别运行<code>javac HelloWorld.java</code>和<code>java HelloWorld</code>进行编译和运行</p>\n</li>\n<li>\n<p>也可以直接输入<code>java HelloWorld.java</code>进行运行（Java 11 新增功能，单个文件直接运行）</p>\n</li>\n</ul>\n<h2 id=\"完整输出过程\">完整输出过程</h2>\n<figure><div class=\"code-wrapper\"><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">lkhsss@LKH-PC:&#x2F;mnt&#x2F;d&#x2F;Java$ javac HelloWorld.java\nlkhsss@LKH-PC:&#x2F;mnt&#x2F;d&#x2F;Java$ java HelloWorld\nHello World</code></pre></div></figure>\n<p>或者直接</p>\n<figure><div class=\"code-wrapper\"><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">lkhsss@LKH-PC:&#x2F;mnt&#x2F;d&#x2F;Java$ java HelloWorld.java\nHello World</code></pre></div></figure>\n<hr>\n<h1>语法解析</h1>\n<h2 id=\"类\">类</h2>\n<figure><div class=\"code-wrapper\"><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">public class HelloWorld &#123;&#125;</code></pre></div></figure>\n<p>这玩意儿叫做 java 的类(class)。其中<code>public</code>表示这个类公开，而<code>HelloWorld</code>则为这个类的类名。</p>\n<h3 id=\"public-类\">public 类</h3>\n<p>在 java 程序当中，可以同时出现很多个类，但有且仅有一个类是<code>public</code>并且这个<code>public</code>类的名字<strong>必须和文件名相同</strong>。</p>\n<p>因为每一个 java 程序运行的时候都会先执行 public 这个类（类似于 Python 中的<code>__init__</code>）。</p>\n<h3 id=\"多个类\">多个类</h3>\n<p>也可以多个类，然后相互调用</p>\n<figure><div class=\"code-wrapper\"><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">public class HelloWorld &#123;\n    &#x2F;* 第一个Java程序\n     * 它将输出字符串 Hello World\n     *&#x2F;\n    public static void main(String[] args) &#123;\n        System.out.println(&quot;Hello World&quot;); &#x2F;&#x2F; 输出 Hello World\n        about a&#x3D;new about(); &#x2F;&#x2F;创建一个about类\n        a.sayabout(); &#x2F;&#x2F;调用about类中的sayabout()方法\n\n    &#125;\n&#125;\nclass about &#123;\n    void sayabout() &#123;\n        System.out.println(&quot;现在我正在学习java&quot;);\n    &#125;\n&#125;</code></pre></div></figure>\n<p>输出：</p>\n<figure><div class=\"code-wrapper\"><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">lkhsss@LKH-PC:&#x2F;mnt&#x2F;d&#x2F;Java$ java HelloWorld.java\nHello World\n现在我正在学习java</code></pre></div></figure>\n<h2 id=\"方法\">方法</h2>\n<figure><div class=\"code-wrapper\"><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">public static void main(String[] args) &#123;&#125;</code></pre></div></figure>\n<p>这个玩意儿叫做 java 的方法。</p>\n<p>类似于其他编程语言的<strong>函数</strong>。</p>\n<p>将一段可重复运行的代码绑在一起调用，简化代码，提高代码的可读性，可维护性，可重用性，安全性。</p>\n<h3 id=\"修饰符\">修饰符</h3>\n<p>java 方法的首个属性就是<strong>访问修饰符</strong>。</p>\n<p>访问修饰符分为 公有的(public)，默认的(default)，私有的(private)，受保护的(protected) 和 私有的(private)。</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">修饰符</th>\n<th style=\"text-align:center\">区别</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">public</td>\n<td style=\"text-align:center\">可以被所有其他类所访问</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">default</td>\n<td style=\"text-align:center\">同一包中的类可以访问，声明时没有加修饰符</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">protected</td>\n<td style=\"text-align:center\">自身，子类及同一个包中类可以访问。</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">private</td>\n<td style=\"text-align:center\">只能被自己访问和修改</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"输出\">输出</h2>\n<figure><div class=\"code-wrapper\"><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">System.out.println(&quot;Hello World&quot;);</code></pre></div></figure>\n<p>只是输出一个 Hello World 而已</p>\n",
            "tags": [
                "编程",
                "Java",
                "学习"
            ]
        }
    ]
}