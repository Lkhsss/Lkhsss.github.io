<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://lkhsss.github.io</id>
    <title>LKHSSS的Blog • Posts by &#34;库&#34; category</title>
    <link href="https://lkhsss.github.io" />
    <updated>2022-12-10T02:20:24.000Z</updated>
    <category term="Go" />
    <category term="学习笔记" />
    <category term="学习目录" />
    <category term="Git" />
    <category term="代理" />
    <category term="编程" />
    <category term="Hexo" />
    <category term="Html" />
    <category term="LaTex" />
    <category term="Rust" />
    <category term="Python" />
    <category term="数据库" />
    <category term="MySQL" />
    <category term="解决方案" />
    <category term="iced" />
    <category term="Powershell" />
    <category term="Windows" />
    <category term="高中" />
    <category term="化学" />
    <category term="内卷笔记" />
    <category term="计算机" />
    <category term="汇编" />
    <category term="数学" />
    <category term="公式" />
    <category term="总结" />
    <category term="物理" />
    <category term="Linux" />
    <category term="Kali" />
    <category term="树莓派" />
    <category term="WSL" />
    <entry>
        <id>https://lkhsss.github.io/%E7%BC%96%E7%A8%8B/Python/%E5%BA%93/python-click%E5%BA%93/</id>
        <title>python-Click库</title>
        <link rel="alternate" href="https://lkhsss.github.io/%E7%BC%96%E7%A8%8B/Python/%E5%BA%93/python-click%E5%BA%93/"/>
        <content type="html">&lt;h1&gt;Click&lt;/h1&gt;
&lt;p&gt;Click全名&lt;em&gt;Command Line Interface Creation Kit&lt;/em&gt;，是一个用于构建命令行的第三方库，相较于Python自带的&lt;a href=&#34;https://docs.python.org/zh-cn/3/library/argparse.html&#34;&gt;Argparse&lt;/a&gt;更加友好和易用。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;官方文档：&lt;a href=&#34;https://palletsprojects.com/p/click/&#34;&gt;Click | The Pallets Projects&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;PyPI：&lt;a href=&#34;https://pypi.org/project/click/&#34;&gt;Click · PyPI&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;安装&#34;&gt;安装&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;pip install click&lt;/code&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;用法&#34;&gt;用法&lt;/h2&gt;
&lt;p&gt;引用库&lt;code&gt;import click&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&#34;click-command&#34;&gt;@click.command()&lt;/h3&gt;
&lt;p&gt;使用&lt;code&gt;@click.command()&lt;/code&gt;修饰想要构建为命令行命令的函数&lt;/p&gt;
&lt;figure&gt;&lt;div class=&#34;code-wrapper&#34;&gt;&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;#39;&amp;#39;&amp;#39;
filename: test.py
&amp;#39;&amp;#39;&amp;#39;
import click

@click.command()  # 为函数&amp;#96;test()&amp;#96;添加修饰器
def test():
    click.echo(&amp;quot;测试函数，没有什么卵用&amp;quot;)

if __name__ &amp;#x3D;&amp;#x3D; &amp;quot;__main__&amp;quot;:
    test()&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;
&lt;p&gt;添加后和没有加没有任何不同，因为没有使用&lt;code&gt;@click.option()&lt;/code&gt;进行命令行选项的进一步设置&lt;/p&gt;
&lt;p&gt;使用&lt;code&gt;click.echo()&lt;/code&gt;是为了更好的终端兼容性&lt;/p&gt;
&lt;h3 id=&#34;click-option&#34;&gt;@click.option()&lt;/h3&gt;
&lt;p&gt;使用&lt;code&gt;@click.option()&lt;/code&gt;增加修饰选项&lt;/p&gt;
&lt;figure&gt;&lt;div class=&#34;code-wrapper&#34;&gt;&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;#39;&amp;#39;&amp;#39;
filename: test.py
&amp;#39;&amp;#39;&amp;#39;
import click

@click.command()  # 为函数&amp;#96;test()&amp;#96;添加修饰器
@click.option(
    &amp;quot;-n&amp;quot;,
    &amp;quot;--name&amp;quot;,
    prompt&amp;#x3D;&amp;quot;请输入你的名字&amp;quot;,
    default&amp;#x3D;&amp;quot;无名氏&amp;quot;,
    help&amp;#x3D;&amp;quot;你的名字。默认值为“无名氏”&amp;quot;,
    type&amp;#x3D;str,
) # 设置参数
def test(name):
    click.echo((&amp;quot;你输入的名字为：&amp;#123;&amp;#125;&amp;quot;).format(name)) #输出

if __name__ &amp;#x3D;&amp;#x3D; &amp;quot;__main__&amp;quot;: # 程序入口
    test()&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;
&lt;figure&gt;&lt;div class=&#34;code-wrapper&#34;&gt;&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;lkhsss@LKH-PC:~$ python test.py -n LKH
你输入的名字为：LKH

lkhsss@LKH-PC:~$ python test.py
请输入你的名字 [无名氏]: LKH
你输入的名字为：LKH&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;@click.option()&lt;/code&gt;接受一种参数多种名字，上例的&lt;code&gt;-n&lt;/code&gt;和&lt;code&gt;--name&lt;/code&gt;都指向了一个函数&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;使用&lt;code&gt;prompt&lt;/code&gt;指定必须要求输入的参数在没有传入时显示的提示&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;当使用了&lt;code&gt;prompt&lt;/code&gt;时，click会认为该参数为必须项，会主动询问参数的值&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;使用&lt;code&gt;help&lt;/code&gt;指定该参数的帮助信息&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;使用&lt;code&gt;type&lt;/code&gt;指定传入数据的类型&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;使用&lt;code&gt;type=click.Choice[&#39;A&#39;,&#39;B&#39;]&lt;/code&gt;限制该参数只能从A和B中选择&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;菜单选项&#34;&gt;菜单选项&lt;/h3&gt;
&lt;p&gt;配置好参数后，click自动为我们准备了&lt;code&gt;--help&lt;/code&gt;选项，其中包含了我们在&lt;code&gt;help&lt;/code&gt;中加入的帮助信息&lt;/p&gt;
&lt;figure&gt;&lt;div class=&#34;code-wrapper&#34;&gt;&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;lkhsss@LKH-PC:~$ python test.py --help
Usage: test.py [OPTIONS]

Options:
  -n, --name TEXT  你的名字。默认值为“无名氏”
  --help           Show this message and exit.&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;
&lt;hr&gt;
&lt;h2 id=&#34;示例&#34;&gt;示例&lt;/h2&gt;
&lt;figure&gt;&lt;div class=&#34;code-wrapper&#34;&gt;&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;#39;&amp;#39;&amp;#39;
filename: test.py
author: Lkhsss
&amp;#39;&amp;#39;&amp;#39;
import click

@click.command()  # 为函数&amp;#96;test()&amp;#96;添加修饰器
@click.option(
    &amp;quot;-n&amp;quot;,
    &amp;quot;--name&amp;quot;,
    prompt&amp;#x3D;&amp;quot;请输入你的名字&amp;quot;,
    default&amp;#x3D;&amp;quot;无名氏&amp;quot;,
    help&amp;#x3D;&amp;quot;你的名字，传入参数后将显示在输出中。默认值为“无名氏”&amp;quot;,
    type&amp;#x3D;str,
)
# 选择可以传入&amp;#96;test()&amp;#96;的参数
# 可以使用多个参数名，输入&amp;quot;-n&amp;quot;，&amp;quot;--name&amp;quot;都会指向&amp;#96;test()&amp;#96;函数
# 使用default参数设置参数默认值
# 使用help参数设置帮助菜单
@click.option(
    &amp;quot;-c&amp;quot;,
    &amp;quot;--count&amp;quot;,
    prompt&amp;#x3D;&amp;quot;请输入循环次数&amp;quot;,
    default&amp;#x3D;&amp;quot;1&amp;quot;,
    help&amp;#x3D;&amp;quot;显示名字次数，默认值为1&amp;quot;,
    type&amp;#x3D;int
)
def test(name, count):
    for i in range(count):
        click.echo((&amp;quot;&amp;#123;&amp;#125;，你好。&amp;quot;).format(name))
    click.echo(&amp;quot;这是一个示例函数，可以输出你在命令行中输入的名字，用来测试click库&amp;quot;)

if __name__ &amp;#x3D;&amp;#x3D; &amp;quot;__main__&amp;quot;:
    test()&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;
</content>
        <category term="编程" />
        <category term="Python" />
        <updated>2022-12-10T02:20:24.000Z</updated>
    </entry>
</feed>
